Операторы могут производить некоторые действия над данными, и эти данные называются операндами.
Выражения это работа операторов над операндами
________________________________________________

Операторы языка  делятся на три категории:

● унарные,
● бинарные,
● тернарные.

_________________________________________________
Либо по функциональному признаку:


Арифметические операторы	    Эти операторы выполняют математические вычисления.
Операторы присваивания	        Эти операторы выполняют операции присваивания.
Операторы сравнения	            Эти операторы выполняют сравнения.
Операторы объединения	        Эти операторы объединяют строки.
Логические и битовые операторы	Эти операторы выполняют логические операции.
Операторы сдвига битов	        Эти операторы выполняют арифметические сдвиги для битовых шаблонов.
Прочие операторы	            Эти операторы выполняют различные операции.

_________________________________________________



Приоритет операторов

Вычисления выполняются слева направо, то есть, если в выражении встретятся операторы одинаковых приоритетов,
первым будет выполнен тот, что слева.

Оператор возведения в степень исключение из этого правила.
Из двух операторов ** сначала выполнится правый, а потом левый.

___________________________________
Оператор                                                 Описание
(expressions...),                                        Скобки – высший приоритет – первые
[expressions...], {key: value...}, {expressions...}

x[index], x[index:index], x(arguments...), x.attribute   Слайсинг, вызов атрибутов, вызов функций
await x                                                  Ассинхронный оператор await
**	                                                     Экспонента (возведение в степень)
+x, -x, ~x	                                             Унарные плюс, минус и битовое отрицание
*, @, /, //, %	                                         Умножение, деления, взятие остатка
+, -	                                                 Сложение и вычитание
<<, >>	                                                 Битовые сдвиги
&	                                                     Битовое И
^	                                                     Битовое исключающее ИЛИ (XOR)
|	                                                     Битовое ИЛИ
in, not in, is, is not, <, <=, >, >=, !=, ==	         Сравнение, проверка идентичности, проверка вхождения
not	                                                     Логическое НЕ
and	                                                     Логическое И
or	                                                     Логическое ИЛИ
x if y else z                                            Тернарный оператор
lambda                                                   lambda выражение
:=                                                       Оператор Присваивания
__________________________________________


пояснение по битовым операторам:
a = 5     # 0b101
b = 6     # 0b110

c = a & b # 0b100 == 4
d = a | b # 0b111 == 7
e = a ^ b # 0b11 == 3 результат выполнения операции истинен тогда и только тогда, когда один из аргументов истинен, а другой — ложен.
f =  ~ a  # 0b1...11111010 == -6

https://docs.python.org/3/reference/expressions.html